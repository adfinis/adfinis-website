@tailwind base;
@tailwind components;
@tailwind utilities;


body {
  @apply font-sans;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/*
* @info global css variable declarations
* These are necessary as we want to use these variables in children of elements with a data-scheme.
* The default is "light", set in layout.tsx.
*/
[data-scheme="light"] {
  --button-text-primary: theme("colors.neutral");
  --button-bg-primary: theme("colors.sapphire");
  --button-text-secondary: theme("colors.sapphire");
  --button-bg-secondary: none;
  --title-text-primary: theme("colors.biscay");
  --paragraph-text-primary: theme("colors.stone");
  --quote-border-primary: theme('colors.biscay');
}

[data-scheme="dark"] {
  --button-text-primary: theme("colors.sapphire");
  --button-bg-primary: theme("colors.neutral");
  --button-text-secondary: theme("colors.neutral");
  --title-text-primary: theme("colors.neutral");
  --paragraph-text-primary: theme("colors.neutral");
  --quote-border-primary: theme('colors.neutral');
}


/**
* @layer components is for utility classes that are specific to a component.
* @layer components makes sure that other tailwind classes still take precedence when passed to the component which has a components class.
*/
@layer components {
  /**
  * Responsive topbar utility.
  * mobile: The width is calculated as the viewport minus 1rem. (@see tailwind.config.ts:container)
  * desktop: The width is calculated as the viewport minus half of the screen minus the container.
  */

  .w-topbar {
    width: calc(100vw - theme("spacing.4"));

    @media (min-width: theme("screens.sm")) {
      width: calc(100vw - (100vw - theme("screens.sm")) / 2);
    }

    @media (min-width: theme("screens.md")) {
      width: calc(100vw - (100vw - theme("screens.md")) / 2);
    }

    @media (min-width: theme("screens.lg")) {
      width: calc(100vw - (100vw - theme("screens.lg")) / 2);
    }

    @media (min-width: theme("screens.xl")) {
      width: calc(100vw - (100vw - theme("screens.xl")) / 2);
    }

    @media (min-width: theme("screens.2xl")) {
      width: calc(100vw - (100vw - theme("screens.2xl")) / 2);
    }
  }

  b {
    @apply font-semibold leading-none;
  }
}

@import './text.css';