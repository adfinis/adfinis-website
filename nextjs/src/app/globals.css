@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  @apply font-sans;
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/*
* The default is "light", set in layout.tsx.
*/
[data-scheme="light"] {
  --text-primary: theme("colors.neutral");
  --bg-primary: theme("colors.sapphire");
  --text-secondary: theme("colors.sapphire");
  --bg-secondary: none;
}
[data-scheme="dark"] {
  --text-primary: theme("colors.sapphire");
  --bg-primary: theme("colors.neutral");
  --text-secondary: theme("colors.neutral");
}

/**
* @layer components is for utility classes that are specific to a component.
* @layer components makes sure that other tailwind classes still take precedence when passed to the component which has a components class.
*/
@layer components {
  /**
  * Responsive topbar utility.
  * mobile: The width is calculated as the viewport minus 1rem. (@see tailwind.config.ts:container)
  * desktop: The width is calculated as the viewport minus half of the screen minus the container.
  */

  .w-topbar {
    width: calc(100vw - theme("spacing.4"));

    @media (min-width: theme("screens.sm")) {
      width: calc(100vw - (100vw - theme("screens.sm")) / 2);
    }
    @media (min-width: theme("screens.md")) {
      width: calc(100vw - (100vw - theme("screens.md")) / 2);
    }
    @media (min-width: theme("screens.lg")) {
      width: calc(100vw - (100vw - theme("screens.lg")) / 2);
    }
    @media (min-width: theme("screens.xl")) {
      width: calc(100vw - (100vw - theme("screens.xl")) / 2);
    }
    @media (min-width: theme("screens.2xl")) {
      width: calc(100vw - (100vw - theme("screens.2xl")) / 2);
    }
  }
}
