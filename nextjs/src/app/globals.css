@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  @apply 3xl:text-20;
}

body {
  @apply font-sans;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {

  /**
  * @info these values are raw rgb values for the corresponding hex colors in colors.css
  */
  :root {
    --color-white: 255 255 255;
    --color-stone: 15 15 15;
    --color-biscay: 28 46 93;
    --color-sapphire: 46 75 152;
    --color-jumbo: 139 139 140;
    --color-neutral: 245 246 245;
    --color-sunglow: 255 202 49;
    --color-sky: 85 192 238;
    --color-cinnamon: 229 104 32;
    --color-green: 52 174 107;
    --color-razzmatazz: 227 13 116;
    --color-fuchsia: 126 87 194;
    --color-manhattan: 247 198 165;
    --color-error: 255 14 0;
    --color-grass: 126 150 0;
    --color-salmon: 247 198 165;
    --color-pink: 227 13 116;
    --color-purple: 110 0 105;
  }


  /*
* @info global css variable declarations
* These are necessary as we want to use these variables in children of elements with a data-scheme.
* The default is "light", set in layout.tsx.
*/
  [data-scheme="light"] {
    --button-text-primary: var(--color-neutral);
    --button-bg-primary: var(--color-sapphire);
    --button-text-secondary: var(--color-sapphire);
    --button-bg-secondary: none;
    --title-text-primary: var(--color-biscay);
    --paragraph-text-primary: var(--color-stone);
    --quote-border-primary: var(--color-biscay);
    --input-bg-primary: var(--color-stone);
    --input-text-primary: var(--color-stone);
    --input-border-primary: var(--color-stone);
    --input-ring-primary: var(--color-stone);
    --checkbox-border-primary: var(--color-stone);
    --checkbox-text-primary: var(--color-stone);
    --checkbox-ring-primary: var(--color-stone);
    --checkbox-ring-offset-primary: var(--color-neutral);
  }

  [data-scheme="dark"] {
    --button-text-primary: var(--color-sapphire);
    --button-bg-primary: var(--color-neutral);
    --button-text-secondary: var(--color-neutral);
    --title-text-primary: var(--color-neutral);
    --paragraph-text-primary: var(--color-neutral);
    --quote-border-primary: var(--color-neutral);
    --input-bg-primary: var(--color-neutral);
    --input-text-primary: var(--color-neutral);
    --input-border-primary: var(--color-neutral);
    --input-ring-primary: var(--color-neutral);
    --checkbox-border-primary: var(--color-neutral);
    --checkbox-text-primary: var(--color-stone);
    --checkbox-ring-primary: var(--color-neutral);
    --checkbox-ring-offset-primary: var(--color-stone);
  }
}


/**
* @layer components is for utility classes that are specific to a component.
* @layer components makes sure that other tailwind classes still take precedence when passed to the component which has a components class.
*/
@layer components {
  /**
  * Responsive topbar utility.
  * mobile: The width is calculated as the viewport minus 1rem. (@see tailwind.config.ts:container)
  * desktop: The width is calculated as the viewport minus half of the screen minus the container.
  */

  .w-topbar {
    width: calc(100vw - theme("spacing.4"));

    @media (min-width: theme("screens.sm")) {
      width: calc(100vw - (100vw - theme("screens.sm")) / 2);
    }

    @media (min-width: theme("screens.md")) {
      width: calc(100vw - (100vw - theme("screens.md")) / 2);
    }

    @media (min-width: theme("screens.lg")) {
      width: calc(100vw - (100vw - theme("screens.lg")) / 2);
    }

    @media (min-width: theme("screens.xl")) {
      width: calc(100vw - (100vw - theme("screens.xl")) / 2);
    }

    @media (min-width: theme("screens.2xl")) {
      width: calc(100vw - (100vw - theme("screens.2xl")) / 2);
    }

    @media (min-width: theme("screens.3xl")) {
      width: calc(100vw - (100vw - theme("screens.3xl")) / 2);
    }
  }

  b,
  strong {
    @apply font-semibold leading-none;
  }
}

@layer components {
  .external-script {
      @apply w-full;
      iframe {
          @apply w-full;
      }
  }
}

  /* 
  * Simulates tailwind 4.10+ text-shadow utility.
  */
@layer utilities {
  .text-shadow-md\/10 {
    text-shadow: 0px 1px 1px rgb(0 0 0 / 0.1), 0px 1px 2px rgb(0 0 0 / 0.1), 0px 2px 4px rgb(0 0 0 / 0.1);
  }
}


@import './text.css';
@import './hamburger-react.css';